generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique @db.VarChar(100)
  last_login      DateTime  
  password_hashed String    @db.VarChar(255)
  time_created    DateTime  @default(now())
  username        String    @db.VarChar(25)
  workouts        Workout[]
}

model Workout {
  id           Int        @id @default(autoincrement())
  user_id      Int
  name         String     @db.VarChar(255)
  difficulty   Difficulty
  description  String
  time_created DateTime   @default(now())
  muscles Muscle[]
  routines     Routine[]
  tags Tag[]
  user         User       @relation(fields: [user_id], references: [id])
}

model Routine {
  id          Int      @id @default(autoincrement())
  exercise_id Int
  repetitions Int
  rest        Int
  workout_id  Int
  weight_lbs Int
  exercise    Exercise @relation(fields: [exercise_id], references: [id])
  workout     Workout  @relation(fields: [workout_id], references: [id])
}

model Exercise {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  difficulty  Difficulty
  description String
  video_path  String
  routines    Routine[]
  muscles Muscle[]
  tags        Tag[]      @relation("ExerciseToTag")
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  exercises Exercise[] @relation("ExerciseToTag")
  workouts Workout[]
}

model Muscle {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  bodyPart_id Int
  bodyPart BodyPart @relation(fields: [bodyPart_id], references: [id])
  workouts Workout[]
  exercises Exercise[]
}

model BodyPart {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  muscles Muscle[]
}

enum Difficulty {
  beginner
  intermediate
  expert
}
